name: Deploy to VPS

on:
  workflow_call: # Allows it to be triggered from another workflow
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Rebuild .env securely
        run: |
          sed '/# Facultative/,$d' .env_sample > .env
          sed -i "s|^NODE_ENV=.*|NODE_ENV=${{ vars.NODE_ENV }}|" .env
          sed -i "s|^DISCORD_WEBHOOK_URL=.*|DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}|" .env

      - name: Check .env file contents
        run: cat .env

      - name: Move Docker-compose.yaml to project root as docker-compose.yml
        run: mv Docker/Docker-compose.yaml docker-compose.yml

      - name: Verify files before SCP
        run: |
          ls -la .env
          ls -la docker-compose.yml

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ vars.VPS_HOSTNAME }}
          username: ${{ vars.VPS_USERNAME }}
          password: ${{ secrets.VPS_DEPLOYER_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          source: ".env,docker-compose.yml"
          target: "/home/${{ vars.VPS_USERNAME }}/"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ vars.VPS_HOSTNAME }}
          username: ${{ vars.VPS_USERNAME }}
          password: ${{ secrets.VPS_DEPLOYER_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "âœ… SSH connection successful"

            whoami
            hostname
            uptime

            cd ~

            docker compose down
            docker compose up -d --build

            sudo service caddy reload

            ls -la
